<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 The Netty Project
  ~
  ~ The Netty Project licenses this file to you under the Apache License,
  ~ version 2.0 (the "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at:
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.netty</groupId>
    <artifactId>netty-parent</artifactId>
    <version>4.1.40.Final-SNAPSHOT</version>
  </parent>

  <artifactId>netty-tarball</artifactId>
  <packaging>pom</packaging>

  <name>Netty/Tarball</name>

  <dependencies>
    <!-- The example depends on all modules either directly or transitively -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>netty-example</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
    <!-- All-in-one JAR -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>netty-all</artifactId>
      <version>${project.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>clean-first</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Disable animal sniffer -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Disable checkstyle -->
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <id>check-style</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <!-- Do not deploy this module -->
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- If the uber profile is used it will automatically fetch the missing native jar from maven and add it to the all jar as well. -->
    <profile>
      <id>uber-staging</id>
      <repositories>
        <!-- jfrog config -->
        <repository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>iqiyi-maven-releases</id>
          <name>iqiyi-maven-releases</name>
          <url>http://jfrog.cloud.qiyi.domain:80/iqiyi-maven-release</url>
        </repository>
        <repository>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>iqiyi-maven-snapshots</id>
          <name>iqiyi-maven-snapshots</name>
          <url>http://jfrog.cloud.qiyi.domain:80/iqiyi-maven-snapshot</url>
        </repository>
        <repository>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <id>libs-release</id>
          <name>libs-release</name>
          <url>http://jfrog.cloud.qiyi.domain/libs-release</url>
        </repository>
        <repository>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>libs-snapshot</id>
          <name>libs-snapshot</name>
          <url>http://jfrog.cloud.qiyi.domain/libs-snapshot</url>
        </repository>
        <repository>
          <id>maven-old</id>
          <name>maven-old</name>
          <url>http://maven.qiyi.virtual/a/repository</url>
        </repository>
        <!-- jfrog config -->
        <repository>
          <id>nexus</id>
          <url>http://maven.mbd.qiyi.domain/nexus/content/groups/public/</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
        <repository>
          <id>repository.springframework.maven.release</id>
          <name>Spring Framework Maven Release Repository</name>
          <url>http://maven.springframework.org/milestone/</url>
        </repository>
        <repository>
          <id>org.springframework</id>
          <url> http://maven.springframework.org/snapshot</url>
        </repository>
        <repository>
          <id>spring-milestone</id>
          <name>Spring Maven MILESTONE Repository</name>
          <url>http://repo.spring.io/libs-milestone</url>
        </repository>
        <repository>
          <id>spring-release</id>
          <name>Spring Maven RELEASE Repository</name>
          <url>http://repo.spring.io/libs-release</url>
        </repository>

        <repository>
          <id>repository.iqiyi.com</id>
          <name>iQIYI Repository</name>
          <url>http://maven.qiyi.virtual/a/iqiyi-internal-repo</url>
          <layout>default</layout>
          <releases>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
          </releases>
          <snapshots>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
          </snapshots>
        </repository>
        <repository>
          <id>qiyi-repository-release</id>
          <url>http://maven.qiyi.virtual/a/repository</url>
        </repository>
      </repositories>


      <dependencies>
        <!-- Depend on all our native jars -->
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
          <version>${project.version}</version>
          <classifier>linux-x86_64</classifier>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>netty-transport-native-kqueue</artifactId>
          <version>${project.version}</version>
          <classifier>osx-x86_64</classifier>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>uber-snapshot</id>
      <dependencies>
        <!-- Depend on all our native jars -->
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>netty-transport-native-epoll</artifactId>
          <version>${project.version}</version>
          <classifier>linux-x86_64</classifier>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>netty-transport-native-kqueue</artifactId>
          <version>${project.version}</version>
          <classifier>osx-x86_64</classifier>
          <scope>compile</scope>
          <optional>true</optional>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>full</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-jars</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/jars</outputDirectory>
                  <includeGroupIds>${project.groupId}</includeGroupIds>
                  <excludeArtifactIds>netty-all</excludeArtifactIds>
                </configuration>
              </execution>
              <execution>
                <id>copy-sources</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <classifier>sources</classifier>
                  <outputDirectory>${project.build.directory}/jars</outputDirectory>
                  <includeGroupIds>${project.groupId}</includeGroupIds>
                  <excludeArtifactIds>netty-all</excludeArtifactIds>
                </configuration>
              </execution>
              <execution>
                <id>copy-jars-all-in-one</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/jars-all</outputDirectory>
                  <includeGroupIds>${project.groupId}</includeGroupIds>
                  <includeArtifactIds>netty-all</includeArtifactIds>
                </configuration>
              </execution>
              <execution>
                <id>copy-sources-all-in-one</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <classifier>sources</classifier>
                  <outputDirectory>${project.build.directory}/jars-all</outputDirectory>
                  <includeGroupIds>${project.groupId}</includeGroupIds>
                  <includeArtifactIds>netty-all</includeArtifactIds>
                </configuration>
              </execution>
              <execution>
                <id>copy-apidocs-all-in-one</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <classifier>javadoc</classifier>
                  <outputDirectory>${project.build.directory}/apidocs-all</outputDirectory>
                  <includeGroupIds>${project.groupId}</includeGroupIds>
                  <includeArtifactIds>netty-all</includeArtifactIds>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <executions>
              <execution>
                <id>build-tarball</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
                <configuration>
                  <finalName>netty-${project.version}</finalName>
                  <appendAssemblyId>false</appendAssemblyId>
                  <attach>false</attach>
                  <descriptors>
                    <descriptor>${project.basedir}/assembly.xml</descriptor>
                  </descriptors>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>

